{"version":3,"sources":["logo.svg","components/MapWrapper/MapWrapper.js","components/Master/Master.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","mapStyles","width","height","MapWrapper","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","getVenueDetails","id","axios","get","apiURL","param","VENUE_ID","URLSearchParams","then","response","setState","selectedPlace","data","venue","showingInfoWindow","console","log","state","catch","error","alert","onMarkerClick","marker","e","selectedItem","markers","forEach","item","name","toLowerCase","includes","title","activeMarker","onClose","bind","assertThisInitialized","client_id","client_secret","v","_this2","react_default","a","createElement","dist","google","zoom","style","initialCenter","lat","position","lng","map","index","ref","location","key","onClick","venu","animation","maps","Animation","BOUNCE","icon","url","visible","aria-label","color","ratingColor","rating","Component","GoogleApiWrapper","apiKey","Master","getVenues","venues","groups","items","filteredVenues","isLoading","getGeoLocation","navigator","geolocation","getCurrentPosition","coords","prevState","currentLatLng","objectSpread","latitude","longitude","ll","menuOpen","noResults","query","toggleMenu","filterVenues","fliteredArray","target","value","push","length","className","type","onChange","placeholder","components_MapWrapper_MapWrapper","src","logo","alt","App","components_Master_Master","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","render","src_App","document","getElementById","URL","process","href","origin","addEventListener","concat","fetch","contentType","headers","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.0e38d37f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import { Map, GoogleApiWrapper, InfoWindow, Marker } from 'google-maps-react';\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport axios from 'axios';\nconst mapStyles = {\n  width: '100%',\n  height: '100%'\n};\n\nconst API_KEY =  'AIzaSyAxEHaeEZu0J6psDIhMBHEnwJ77jcxQoK0';\n\nclass MapWrapper extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      markers:this.props.markers,\n      showingInfoWindow: false,  //Hides or the shows the infoWindow\n      activeMarker: {},          //Shows the active marker upon click\n      selectedPlace: {},        //Shows the infoWindow to the selected place upon a marker\n    }\n    this.onMarkerClick = this.onMarkerClick.bind(this);\n    this.onMarkerClick = this.onMarkerClick.bind(this);\n    this.onClose = this.onClose.bind(this);\n    this.param = {\n      client_id: \"1CPFL1RI135SHQNHOTCT2HYAAXV3LK0SHR1RCIBVWOHMLZOF\",\n      client_secret: \"U5G4FEDYVEAHXJH3BSYYGNGPYTK1JKSNQVU3RPWRGHSYN3PV\",\n      VENUE_ID: '',\n      v:'20190126'\n    }\n\n    this.apiURL = \"https://api.foursquare.com/v2/venues/\";\n    \n  }\n  \n  getVenueDetails = (id) => {\n    axios.get(this.apiURL +this.param.VENUE_ID+'?'+ new URLSearchParams(this.param))\n    .then(response => {\n      this.setState({\n        selectedPlace: response.data.response.venue,\n        showingInfoWindow: true\n      });\n      console.log(response);\n      console.log(this.state.selectedPlace);\n    })\n    .catch(error => {\n      alert('error from foursquare qota eceeded');\n      console.log(\"ERROR!! \" + error)\n    })\n  }\n\n  componentDidMount() {\n    console.log(this.props);\n    console.log(this.state);\n  }\n\n  onMarkerClick = (props, marker, e) =>{\n    console.log(marker);\n    let selectedItem = {};\n    this.state.markers.forEach((item) => {\n      if(item.venue.name.toLowerCase().includes(marker.title.toLowerCase())){\n        selectedItem = item;\n        this.param.VENUE_ID = item.venue.id;\n      }\n    });\n\n    this.getVenueDetails(selectedItem.venue.id);\n\n    this.setState({\n      activeMarker: marker,\n  })\n  }\n    \n\n  onClose = props => {\n    if (this.state.showingInfoWindow) {\n      this.setState({\n        showingInfoWindow: false,\n        activeMarker: null\n      });\n    }\n  }\n\n\n  render() {\n    return (\n        <Map\n        google={this.props.google}\n        zoom={13}\n        style={mapStyles}\n        initialCenter={{\n          lat: this.props.position.lat,\n          lng: this.props.position.lng\n        }}\n      >\n       {this.props.markers.map((item,index) => (\n          <Marker\n                ref={item.venue.id}\n                position={{lat: item.venue.location.lat, lng:item.venue.location.lng}}\n                key={index}\n                title={item.venue.name}\n                onClick={this.onMarkerClick}\n                name={item.venu}\n                animation={this.state.selectedPlace.name === item.venue.name ? this.props.google.maps.Animation.BOUNCE : null  }\n                icon= {{url: \"http://maps.google.com/mapfiles/ms/icons/blue-dot.png\"}}\n              />\n       ))}\n      \n        <InfoWindow\n          marker={this.state.activeMarker}\n          visible={this.state.showingInfoWindow}\n          onClose={this.onClose}\n\n        >\n          <div aria-label=\"title contianer\">\n            <h4>Title: {this.state.selectedPlace.name}</h4>\n            <h4 style={{ color: '#'+ this.state.selectedPlace.ratingColor}}>Rating: {this.state.selectedPlace.rating}</h4>\n          </div>\n        </InfoWindow>\n      </Map>      \n    );\n  }\n}\n\nexport default GoogleApiWrapper({\n  apiKey:API_KEY\n})(MapWrapper)\n\nMapWrapper.propTypes = {\n  markers: PropTypes.array.isRequired,\n  position:PropTypes.object.isRequired\n}\n","import React, { Component } from \"react\";\nimport  MapWrapper  from '../MapWrapper/MapWrapper.js';\nimport axios from 'axios';\nimport logo from '../../logo.svg';\n\n/* this component include header side menu and mapWrapper  */\nclass Master extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { menuOpen: false , \n                   venues: [] , \n                   filteredVenues: [] ,\n                   isLoading: false,\n                   noResults: false,\n                   currentLatLng: {\n                      lat: 0,\n                      lng: 0\n                    }\n                  }\n    this.param = {\n      client_id: \"1CPFL1RI135SHQNHOTCT2HYAAXV3LK0SHR1RCIBVWOHMLZOF\",\n      client_secret: \"U5G4FEDYVEAHXJH3BSYYGNGPYTK1JKSNQVU3RPWRGHSYN3PV\",\n      query: \"food\",\n      ll: this.state.currentLatLng.lat+','+this.state.currentLatLng.lng,\n      v:'20190126'\n    }\n\n    this.apiURL = \"https://api.foursquare.com/v2/venues/explore?\";\n    this.toggleMenu = this.toggleMenu.bind(this);\n    this.filterVenues = this.filterVenues.bind(this);\n    \n  }\n  \n  componentDidMount() {\n    this.getGeoLocation();\n  }\n\n  /*  get all food catgory places near your current location  */\n  getVenues = () => {\n    console.log(this.param) ; \n    axios.get(this.apiURL + new URLSearchParams(this.param))\n      .then(response => {\n        this.setState({\n          venues: response.data.response.groups[0].items,\n          filteredVenues: response.data.response.groups[0].items,\n          isLoading: true\n        }, null);\n      })\n      .catch(error => {\n        console.log(\"ERROR!! \" + error)\n      })\n  }\n\n  toggleMenu() {\n    this.setState(state => ({\n      menuOpen: !state.menuOpen\n    }));\n    console.log(this.state)\n  }\n  /*  get your current location landitude and langtidue to send them to map Wrapper amd to foursquare */\n  getGeoLocation = () => {\n    if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(\n            position => {\n                console.log(position.coords);\n                this.setState(prevState => ({\n                    currentLatLng: {\n                        ...prevState.currentLatLng,\n                        lat: position.coords.latitude,\n                        lng: position.coords.longitude\n                    }\n                }));\n                this.param.ll = position.coords.latitude+','+position.coords.longitude\n                this.getVenues()\n            });\n    } else {\n        this.param.ll = 30.06+','+30.95;\n        this.getVenues();\n        console.log('error');\n    }\n  }\n  filterVenues(e){\n    this.setState({\n      filteredVenues: []\n    }, null);\n    let fliteredArray = [];\n    this.state.venues.forEach((item) => {\n      if(item.venue.name.toLowerCase().includes(e.target.value.toLowerCase())){\n        fliteredArray.push(item);\n      }\n    });\n    if(fliteredArray.length === 0){\n      this.setState({\n        filteredVenues: fliteredArray ,\n        noResults: true\n      }, null);\n    } else{\n      this.setState({\n        filteredVenues: fliteredArray ,\n        noResults: false\n      }, null);\n    }\n  }\n\n  render() {\n    \n    return (\n      <div className=\"container\">\n        <div className={this.state.menuOpen? 'side-menu open' : 'side-menu'} >\n          <input type=\"text\" onChange={this.filterVenues} placeholder=\"filter\" />\n          {this.state.noResults ? <div className=\"no-results\"> No results found </div> : null}\n          <div className=\"side-menu-items\">\n              {this.state.filteredVenues.map((item,index) => (<div key={index} className=\"side-menu-item\" >{item.venue.name}</div>))}\n          </div>\n        </div>\n        <main className={this.state.menuOpen? 'open' : ''}>\n          <header> \n              <div id=\"nav-icon4\" onClick={this.toggleMenu}  className={this.state.menuOpen? 'open' : ''}  >\n                <span></span><span></span><span></span>\n              </div>\n              Neighborhood Map React\n          </header>\n          <section>\n            {\n              this.state.isLoading ? \n              <MapWrapper markers={this.state.filteredVenues} position={this.state.currentLatLng} /> \n              : \n              <div className=\"loading-div\">\n                  <div className=\"text\">\n                    Loading\n                  </div>\n                  <img src={logo} className=\"App-logo\" alt=\"logo\" />\n              </div>\n            }\n              <img src=\"http://icons.iconarchive.com/icons/designbolts/vector-foursquare/128/Foursquare-1-icon.png\"\n\t\t\t\t\tclassName=\"foursquarelogo\"\n\t\t\t\t \talt=\"foursquarelogo\"/>\n          </section>\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default Master;\n","import React, { Component } from 'react';\nimport Master from './components/Master/Master.js';\n\nclass App extends Component {\n  render() {\n    return (<Master />);\n  }\n}\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}